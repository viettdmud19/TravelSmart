#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TravelSmart.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TravelSmart")]
	public partial class dbTravelSmartDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADMIN(ADMIN instance);
    partial void UpdateADMIN(ADMIN instance);
    partial void DeleteADMIN(ADMIN instance);
    partial void InsertAMTHUC(AMTHUC instance);
    partial void UpdateAMTHUC(AMTHUC instance);
    partial void DeleteAMTHUC(AMTHUC instance);
    partial void InsertCHITIETDATHANG(CHITIETDATHANG instance);
    partial void UpdateCHITIETDATHANG(CHITIETDATHANG instance);
    partial void DeleteCHITIETDATHANG(CHITIETDATHANG instance);
    partial void InsertDIADIEM(DIADIEM instance);
    partial void UpdateDIADIEM(DIADIEM instance);
    partial void DeleteDIADIEM(DIADIEM instance);
    partial void InsertDONDATHANG(DONDATHANG instance);
    partial void UpdateDONDATHANG(DONDATHANG instance);
    partial void DeleteDONDATHANG(DONDATHANG instance);
    partial void InsertGIAITRI(GIAITRI instance);
    partial void UpdateGIAITRI(GIAITRI instance);
    partial void DeleteGIAITRI(GIAITRI instance);
    partial void InsertHOTEL(HOTEL instance);
    partial void UpdateHOTEL(HOTEL instance);
    partial void DeleteHOTEL(HOTEL instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLIENKET(LIENKET instance);
    partial void UpdateLIENKET(LIENKET instance);
    partial void DeleteLIENKET(LIENKET instance);
    partial void InsertTINTUC(TINTUC instance);
    partial void UpdateTINTUC(TINTUC instance);
    partial void DeleteTINTUC(TINTUC instance);
    partial void InsertTOUR(TOUR instance);
    partial void UpdateTOUR(TOUR instance);
    partial void DeleteTOUR(TOUR instance);
    #endregion
		
		public dbTravelSmartDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TravelSmartConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbTravelSmartDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbTravelSmartDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbTravelSmartDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbTravelSmartDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADMIN> ADMINs
		{
			get
			{
				return this.GetTable<ADMIN>();
			}
		}
		
		public System.Data.Linq.Table<AMTHUC> AMTHUCs
		{
			get
			{
				return this.GetTable<AMTHUC>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETDATHANG> CHITIETDATHANGs
		{
			get
			{
				return this.GetTable<CHITIETDATHANG>();
			}
		}
		
		public System.Data.Linq.Table<DIADIEM> DIADIEMs
		{
			get
			{
				return this.GetTable<DIADIEM>();
			}
		}
		
		public System.Data.Linq.Table<DONDATHANG> DONDATHANGs
		{
			get
			{
				return this.GetTable<DONDATHANG>();
			}
		}
		
		public System.Data.Linq.Table<GIAITRI> GIAITRIs
		{
			get
			{
				return this.GetTable<GIAITRI>();
			}
		}
		
		public System.Data.Linq.Table<HOTEL> HOTELs
		{
			get
			{
				return this.GetTable<HOTEL>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LIENKET> LIENKETs
		{
			get
			{
				return this.GetTable<LIENKET>();
			}
		}
		
		public System.Data.Linq.Table<TINTUC> TINTUCs
		{
			get
			{
				return this.GetTable<TINTUC>();
			}
		}
		
		public System.Data.Linq.Table<TOUR> TOURs
		{
			get
			{
				return this.GetTable<TOUR>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMIN")]
	public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaAd;
		
		private string _HoTen;
		
		private string _DienThoai;
		
		private string _TenDN;
		
		private string _MatKhau;
		
		private System.Nullable<int> _Quyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaAdChanging(int value);
    partial void OnMaAdChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnTenDNChanging(string value);
    partial void OnTenDNChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnQuyenChanging(System.Nullable<int> value);
    partial void OnQuyenChanged();
    #endregion
		
		public ADMIN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaAd", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaAd
		{
			get
			{
				return this._MaAd;
			}
			set
			{
				if ((this._MaAd != value))
				{
					this.OnMaAdChanging(value);
					this.SendPropertyChanging();
					this._MaAd = value;
					this.SendPropertyChanged("MaAd");
					this.OnMaAdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(10)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDN", DbType="VarChar(15)")]
		public string TenDN
		{
			get
			{
				return this._TenDN;
			}
			set
			{
				if ((this._TenDN != value))
				{
					this.OnTenDNChanging(value);
					this.SendPropertyChanging();
					this._TenDN = value;
					this.SendPropertyChanged("TenDN");
					this.OnTenDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quyen", DbType="Int")]
		public System.Nullable<int> Quyen
		{
			get
			{
				return this._Quyen;
			}
			set
			{
				if ((this._Quyen != value))
				{
					this.OnQuyenChanging(value);
					this.SendPropertyChanging();
					this._Quyen = value;
					this.SendPropertyChanged("Quyen");
					this.OnQuyenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AMTHUC")]
	public partial class AMTHUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ma_AT;
		
		private System.Nullable<int> _Ma_HOTEL;
		
		private string _Ten_AT;
		
		private string _Anh_AT;
		
		private EntityRef<HOTEL> _HOTEL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMa_ATChanging(int value);
    partial void OnMa_ATChanged();
    partial void OnMa_HOTELChanging(System.Nullable<int> value);
    partial void OnMa_HOTELChanged();
    partial void OnTen_ATChanging(string value);
    partial void OnTen_ATChanged();
    partial void OnAnh_ATChanging(string value);
    partial void OnAnh_ATChanged();
    #endregion
		
		public AMTHUC()
		{
			this._HOTEL = default(EntityRef<HOTEL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_AT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ma_AT
		{
			get
			{
				return this._Ma_AT;
			}
			set
			{
				if ((this._Ma_AT != value))
				{
					this.OnMa_ATChanging(value);
					this.SendPropertyChanging();
					this._Ma_AT = value;
					this.SendPropertyChanged("Ma_AT");
					this.OnMa_ATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_HOTEL", DbType="Int")]
		public System.Nullable<int> Ma_HOTEL
		{
			get
			{
				return this._Ma_HOTEL;
			}
			set
			{
				if ((this._Ma_HOTEL != value))
				{
					if (this._HOTEL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMa_HOTELChanging(value);
					this.SendPropertyChanging();
					this._Ma_HOTEL = value;
					this.SendPropertyChanged("Ma_HOTEL");
					this.OnMa_HOTELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_AT", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten_AT
		{
			get
			{
				return this._Ten_AT;
			}
			set
			{
				if ((this._Ten_AT != value))
				{
					this.OnTen_ATChanging(value);
					this.SendPropertyChanging();
					this._Ten_AT = value;
					this.SendPropertyChanged("Ten_AT");
					this.OnTen_ATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anh_AT", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Anh_AT
		{
			get
			{
				return this._Anh_AT;
			}
			set
			{
				if ((this._Anh_AT != value))
				{
					this.OnAnh_ATChanging(value);
					this.SendPropertyChanging();
					this._Anh_AT = value;
					this.SendPropertyChanged("Anh_AT");
					this.OnAnh_ATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOTEL_AMTHUC", Storage="_HOTEL", ThisKey="Ma_HOTEL", OtherKey="Ma_HOTEL", IsForeignKey=true)]
		public HOTEL HOTEL
		{
			get
			{
				return this._HOTEL.Entity;
			}
			set
			{
				HOTEL previousValue = this._HOTEL.Entity;
				if (((previousValue != value) 
							|| (this._HOTEL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOTEL.Entity = null;
						previousValue.AMTHUCs.Remove(this);
					}
					this._HOTEL.Entity = value;
					if ((value != null))
					{
						value.AMTHUCs.Add(this);
						this._Ma_HOTEL = value.Ma_HOTEL;
					}
					else
					{
						this._Ma_HOTEL = default(Nullable<int>);
					}
					this.SendPropertyChanged("HOTEL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETDATHANG")]
	public partial class CHITIETDATHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDonHang;
		
		private int _MaTour;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<decimal> _DonGia;
		
		private EntityRef<DONDATHANG> _DONDATHANG;
		
		private EntityRef<TOUR> _TOUR;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDonHangChanging(int value);
    partial void OnMaDonHangChanged();
    partial void OnMaTourChanging(int value);
    partial void OnMaTourChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    #endregion
		
		public CHITIETDATHANG()
		{
			this._DONDATHANG = default(EntityRef<DONDATHANG>);
			this._TOUR = default(EntityRef<TOUR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonHang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDonHang
		{
			get
			{
				return this._MaDonHang;
			}
			set
			{
				if ((this._MaDonHang != value))
				{
					if (this._DONDATHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDonHangChanging(value);
					this.SendPropertyChanging();
					this._MaDonHang = value;
					this.SendPropertyChanged("MaDonHang");
					this.OnMaDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTour", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTour
		{
			get
			{
				return this._MaTour;
			}
			set
			{
				if ((this._MaTour != value))
				{
					if (this._TOUR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTourChanging(value);
					this.SendPropertyChanging();
					this._MaTour = value;
					this.SendPropertyChanged("MaTour");
					this.OnMaTourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Money")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONDATHANG_CHITIETDATHANG", Storage="_DONDATHANG", ThisKey="MaDonHang", OtherKey="MaDonHang", IsForeignKey=true)]
		public DONDATHANG DONDATHANG
		{
			get
			{
				return this._DONDATHANG.Entity;
			}
			set
			{
				DONDATHANG previousValue = this._DONDATHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONDATHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONDATHANG.Entity = null;
						previousValue.CHITIETDATHANGs.Remove(this);
					}
					this._DONDATHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETDATHANGs.Add(this);
						this._MaDonHang = value.MaDonHang;
					}
					else
					{
						this._MaDonHang = default(int);
					}
					this.SendPropertyChanged("DONDATHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_CHITIETDATHANG", Storage="_TOUR", ThisKey="MaTour", OtherKey="Ma_TOUR", IsForeignKey=true)]
		public TOUR TOUR
		{
			get
			{
				return this._TOUR.Entity;
			}
			set
			{
				TOUR previousValue = this._TOUR.Entity;
				if (((previousValue != value) 
							|| (this._TOUR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TOUR.Entity = null;
						previousValue.CHITIETDATHANGs.Remove(this);
					}
					this._TOUR.Entity = value;
					if ((value != null))
					{
						value.CHITIETDATHANGs.Add(this);
						this._MaTour = value.Ma_TOUR;
					}
					else
					{
						this._MaTour = default(int);
					}
					this.SendPropertyChanged("TOUR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DIADIEM")]
	public partial class DIADIEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ma_DD;
		
		private string _Ten_DD;
		
		private string _MoTa_DD;
		
		private string _ANH_DD;
		
		private System.Nullable<int> _Luot_YeuThich;
		
		private EntitySet<HOTEL> _HOTELs;
		
		private EntitySet<TOUR> _TOURs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMa_DDChanging(int value);
    partial void OnMa_DDChanged();
    partial void OnTen_DDChanging(string value);
    partial void OnTen_DDChanged();
    partial void OnMoTa_DDChanging(string value);
    partial void OnMoTa_DDChanged();
    partial void OnANH_DDChanging(string value);
    partial void OnANH_DDChanged();
    partial void OnLuot_YeuThichChanging(System.Nullable<int> value);
    partial void OnLuot_YeuThichChanged();
    #endregion
		
		public DIADIEM()
		{
			this._HOTELs = new EntitySet<HOTEL>(new Action<HOTEL>(this.attach_HOTELs), new Action<HOTEL>(this.detach_HOTELs));
			this._TOURs = new EntitySet<TOUR>(new Action<TOUR>(this.attach_TOURs), new Action<TOUR>(this.detach_TOURs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_DD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ma_DD
		{
			get
			{
				return this._Ma_DD;
			}
			set
			{
				if ((this._Ma_DD != value))
				{
					this.OnMa_DDChanging(value);
					this.SendPropertyChanging();
					this._Ma_DD = value;
					this.SendPropertyChanged("Ma_DD");
					this.OnMa_DDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_DD", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten_DD
		{
			get
			{
				return this._Ten_DD;
			}
			set
			{
				if ((this._Ten_DD != value))
				{
					this.OnTen_DDChanging(value);
					this.SendPropertyChanging();
					this._Ten_DD = value;
					this.SendPropertyChanged("Ten_DD");
					this.OnTen_DDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa_DD", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MoTa_DD
		{
			get
			{
				return this._MoTa_DD;
			}
			set
			{
				if ((this._MoTa_DD != value))
				{
					this.OnMoTa_DDChanging(value);
					this.SendPropertyChanging();
					this._MoTa_DD = value;
					this.SendPropertyChanged("MoTa_DD");
					this.OnMoTa_DDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH_DD", DbType="VarChar(50)")]
		public string ANH_DD
		{
			get
			{
				return this._ANH_DD;
			}
			set
			{
				if ((this._ANH_DD != value))
				{
					this.OnANH_DDChanging(value);
					this.SendPropertyChanging();
					this._ANH_DD = value;
					this.SendPropertyChanged("ANH_DD");
					this.OnANH_DDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Luot_YeuThich", DbType="Int")]
		public System.Nullable<int> Luot_YeuThich
		{
			get
			{
				return this._Luot_YeuThich;
			}
			set
			{
				if ((this._Luot_YeuThich != value))
				{
					this.OnLuot_YeuThichChanging(value);
					this.SendPropertyChanging();
					this._Luot_YeuThich = value;
					this.SendPropertyChanged("Luot_YeuThich");
					this.OnLuot_YeuThichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIADIEM_HOTEL", Storage="_HOTELs", ThisKey="Ma_DD", OtherKey="Ma_DD")]
		public EntitySet<HOTEL> HOTELs
		{
			get
			{
				return this._HOTELs;
			}
			set
			{
				this._HOTELs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIADIEM_TOUR", Storage="_TOURs", ThisKey="Ma_DD", OtherKey="Ma_DD")]
		public EntitySet<TOUR> TOURs
		{
			get
			{
				return this._TOURs;
			}
			set
			{
				this._TOURs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOTELs(HOTEL entity)
		{
			this.SendPropertyChanging();
			entity.DIADIEM = this;
		}
		
		private void detach_HOTELs(HOTEL entity)
		{
			this.SendPropertyChanging();
			entity.DIADIEM = null;
		}
		
		private void attach_TOURs(TOUR entity)
		{
			this.SendPropertyChanging();
			entity.DIADIEM = this;
		}
		
		private void detach_TOURs(TOUR entity)
		{
			this.SendPropertyChanging();
			entity.DIADIEM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONDATHANG")]
	public partial class DONDATHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDonHang;
		
		private System.Nullable<bool> _DaThanhToan;
		
		private System.Nullable<System.DateTime> _NgayDat;
		
		private System.Nullable<int> _MaKH;
		
		private EntitySet<CHITIETDATHANG> _CHITIETDATHANGs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDonHangChanging(int value);
    partial void OnMaDonHangChanged();
    partial void OnDaThanhToanChanging(System.Nullable<bool> value);
    partial void OnDaThanhToanChanged();
    partial void OnNgayDatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatChanged();
    partial void OnMaKHChanging(System.Nullable<int> value);
    partial void OnMaKHChanged();
    #endregion
		
		public DONDATHANG()
		{
			this._CHITIETDATHANGs = new EntitySet<CHITIETDATHANG>(new Action<CHITIETDATHANG>(this.attach_CHITIETDATHANGs), new Action<CHITIETDATHANG>(this.detach_CHITIETDATHANGs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDonHang
		{
			get
			{
				return this._MaDonHang;
			}
			set
			{
				if ((this._MaDonHang != value))
				{
					this.OnMaDonHangChanging(value);
					this.SendPropertyChanging();
					this._MaDonHang = value;
					this.SendPropertyChanged("MaDonHang");
					this.OnMaDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaThanhToan", DbType="Bit")]
		public System.Nullable<bool> DaThanhToan
		{
			get
			{
				return this._DaThanhToan;
			}
			set
			{
				if ((this._DaThanhToan != value))
				{
					this.OnDaThanhToanChanging(value);
					this.SendPropertyChanging();
					this._DaThanhToan = value;
					this.SendPropertyChanged("DaThanhToan");
					this.OnDaThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int")]
		public System.Nullable<int> MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONDATHANG_CHITIETDATHANG", Storage="_CHITIETDATHANGs", ThisKey="MaDonHang", OtherKey="MaDonHang")]
		public EntitySet<CHITIETDATHANG> CHITIETDATHANGs
		{
			get
			{
				return this._CHITIETDATHANGs;
			}
			set
			{
				this._CHITIETDATHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONDATHANG", Storage="_KHACHHANG", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DONDATHANGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DONDATHANGs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDATHANGs(CHITIETDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONDATHANG = this;
		}
		
		private void detach_CHITIETDATHANGs(CHITIETDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONDATHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIAITRI")]
	public partial class GIAITRI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ma_GT;
		
		private System.Nullable<int> _Ma_HOTEL;
		
		private string _Ten_GT;
		
		private string _ANH_GT;
		
		private EntityRef<HOTEL> _HOTEL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMa_GTChanging(int value);
    partial void OnMa_GTChanged();
    partial void OnMa_HOTELChanging(System.Nullable<int> value);
    partial void OnMa_HOTELChanged();
    partial void OnTen_GTChanging(string value);
    partial void OnTen_GTChanged();
    partial void OnANH_GTChanging(string value);
    partial void OnANH_GTChanged();
    #endregion
		
		public GIAITRI()
		{
			this._HOTEL = default(EntityRef<HOTEL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_GT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ma_GT
		{
			get
			{
				return this._Ma_GT;
			}
			set
			{
				if ((this._Ma_GT != value))
				{
					this.OnMa_GTChanging(value);
					this.SendPropertyChanging();
					this._Ma_GT = value;
					this.SendPropertyChanged("Ma_GT");
					this.OnMa_GTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_HOTEL", DbType="Int")]
		public System.Nullable<int> Ma_HOTEL
		{
			get
			{
				return this._Ma_HOTEL;
			}
			set
			{
				if ((this._Ma_HOTEL != value))
				{
					if (this._HOTEL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMa_HOTELChanging(value);
					this.SendPropertyChanging();
					this._Ma_HOTEL = value;
					this.SendPropertyChanged("Ma_HOTEL");
					this.OnMa_HOTELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_GT", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten_GT
		{
			get
			{
				return this._Ten_GT;
			}
			set
			{
				if ((this._Ten_GT != value))
				{
					this.OnTen_GTChanging(value);
					this.SendPropertyChanging();
					this._Ten_GT = value;
					this.SendPropertyChanged("Ten_GT");
					this.OnTen_GTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH_GT", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string ANH_GT
		{
			get
			{
				return this._ANH_GT;
			}
			set
			{
				if ((this._ANH_GT != value))
				{
					this.OnANH_GTChanging(value);
					this.SendPropertyChanging();
					this._ANH_GT = value;
					this.SendPropertyChanged("ANH_GT");
					this.OnANH_GTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOTEL_GIAITRI", Storage="_HOTEL", ThisKey="Ma_HOTEL", OtherKey="Ma_HOTEL", IsForeignKey=true)]
		public HOTEL HOTEL
		{
			get
			{
				return this._HOTEL.Entity;
			}
			set
			{
				HOTEL previousValue = this._HOTEL.Entity;
				if (((previousValue != value) 
							|| (this._HOTEL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOTEL.Entity = null;
						previousValue.GIAITRIs.Remove(this);
					}
					this._HOTEL.Entity = value;
					if ((value != null))
					{
						value.GIAITRIs.Add(this);
						this._Ma_HOTEL = value.Ma_HOTEL;
					}
					else
					{
						this._Ma_HOTEL = default(Nullable<int>);
					}
					this.SendPropertyChanged("HOTEL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOTEL")]
	public partial class HOTEL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ma_HOTEL;
		
		private string _Ten_HOTEL;
		
		private string _Anh_HOTEL;
		
		private string _Anh_Bia;
		
		private string _DT_HOTEL;
		
		private string _DiaChi_HOTEL;
		
		private System.Nullable<int> _Ma_DD;
		
		private EntitySet<AMTHUC> _AMTHUCs;
		
		private EntitySet<GIAITRI> _GIAITRIs;
		
		private EntityRef<DIADIEM> _DIADIEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMa_HOTELChanging(int value);
    partial void OnMa_HOTELChanged();
    partial void OnTen_HOTELChanging(string value);
    partial void OnTen_HOTELChanged();
    partial void OnAnh_HOTELChanging(string value);
    partial void OnAnh_HOTELChanged();
    partial void OnAnh_BiaChanging(string value);
    partial void OnAnh_BiaChanged();
    partial void OnDT_HOTELChanging(string value);
    partial void OnDT_HOTELChanged();
    partial void OnDiaChi_HOTELChanging(string value);
    partial void OnDiaChi_HOTELChanged();
    partial void OnMa_DDChanging(System.Nullable<int> value);
    partial void OnMa_DDChanged();
    #endregion
		
		public HOTEL()
		{
			this._AMTHUCs = new EntitySet<AMTHUC>(new Action<AMTHUC>(this.attach_AMTHUCs), new Action<AMTHUC>(this.detach_AMTHUCs));
			this._GIAITRIs = new EntitySet<GIAITRI>(new Action<GIAITRI>(this.attach_GIAITRIs), new Action<GIAITRI>(this.detach_GIAITRIs));
			this._DIADIEM = default(EntityRef<DIADIEM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_HOTEL", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ma_HOTEL
		{
			get
			{
				return this._Ma_HOTEL;
			}
			set
			{
				if ((this._Ma_HOTEL != value))
				{
					this.OnMa_HOTELChanging(value);
					this.SendPropertyChanging();
					this._Ma_HOTEL = value;
					this.SendPropertyChanged("Ma_HOTEL");
					this.OnMa_HOTELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_HOTEL", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Ten_HOTEL
		{
			get
			{
				return this._Ten_HOTEL;
			}
			set
			{
				if ((this._Ten_HOTEL != value))
				{
					this.OnTen_HOTELChanging(value);
					this.SendPropertyChanging();
					this._Ten_HOTEL = value;
					this.SendPropertyChanged("Ten_HOTEL");
					this.OnTen_HOTELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anh_HOTEL", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Anh_HOTEL
		{
			get
			{
				return this._Anh_HOTEL;
			}
			set
			{
				if ((this._Anh_HOTEL != value))
				{
					this.OnAnh_HOTELChanging(value);
					this.SendPropertyChanging();
					this._Anh_HOTEL = value;
					this.SendPropertyChanged("Anh_HOTEL");
					this.OnAnh_HOTELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anh_Bia", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Anh_Bia
		{
			get
			{
				return this._Anh_Bia;
			}
			set
			{
				if ((this._Anh_Bia != value))
				{
					this.OnAnh_BiaChanging(value);
					this.SendPropertyChanging();
					this._Anh_Bia = value;
					this.SendPropertyChanged("Anh_Bia");
					this.OnAnh_BiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DT_HOTEL", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string DT_HOTEL
		{
			get
			{
				return this._DT_HOTEL;
			}
			set
			{
				if ((this._DT_HOTEL != value))
				{
					this.OnDT_HOTELChanging(value);
					this.SendPropertyChanging();
					this._DT_HOTEL = value;
					this.SendPropertyChanged("DT_HOTEL");
					this.OnDT_HOTELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi_HOTEL", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DiaChi_HOTEL
		{
			get
			{
				return this._DiaChi_HOTEL;
			}
			set
			{
				if ((this._DiaChi_HOTEL != value))
				{
					this.OnDiaChi_HOTELChanging(value);
					this.SendPropertyChanging();
					this._DiaChi_HOTEL = value;
					this.SendPropertyChanged("DiaChi_HOTEL");
					this.OnDiaChi_HOTELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_DD", DbType="Int")]
		public System.Nullable<int> Ma_DD
		{
			get
			{
				return this._Ma_DD;
			}
			set
			{
				if ((this._Ma_DD != value))
				{
					if (this._DIADIEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMa_DDChanging(value);
					this.SendPropertyChanging();
					this._Ma_DD = value;
					this.SendPropertyChanged("Ma_DD");
					this.OnMa_DDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOTEL_AMTHUC", Storage="_AMTHUCs", ThisKey="Ma_HOTEL", OtherKey="Ma_HOTEL")]
		public EntitySet<AMTHUC> AMTHUCs
		{
			get
			{
				return this._AMTHUCs;
			}
			set
			{
				this._AMTHUCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOTEL_GIAITRI", Storage="_GIAITRIs", ThisKey="Ma_HOTEL", OtherKey="Ma_HOTEL")]
		public EntitySet<GIAITRI> GIAITRIs
		{
			get
			{
				return this._GIAITRIs;
			}
			set
			{
				this._GIAITRIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIADIEM_HOTEL", Storage="_DIADIEM", ThisKey="Ma_DD", OtherKey="Ma_DD", IsForeignKey=true)]
		public DIADIEM DIADIEM
		{
			get
			{
				return this._DIADIEM.Entity;
			}
			set
			{
				DIADIEM previousValue = this._DIADIEM.Entity;
				if (((previousValue != value) 
							|| (this._DIADIEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIADIEM.Entity = null;
						previousValue.HOTELs.Remove(this);
					}
					this._DIADIEM.Entity = value;
					if ((value != null))
					{
						value.HOTELs.Add(this);
						this._Ma_DD = value.Ma_DD;
					}
					else
					{
						this._Ma_DD = default(Nullable<int>);
					}
					this.SendPropertyChanged("DIADIEM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AMTHUCs(AMTHUC entity)
		{
			this.SendPropertyChanging();
			entity.HOTEL = this;
		}
		
		private void detach_AMTHUCs(AMTHUC entity)
		{
			this.SendPropertyChanging();
			entity.HOTEL = null;
		}
		
		private void attach_GIAITRIs(GIAITRI entity)
		{
			this.SendPropertyChanging();
			entity.HOTEL = this;
		}
		
		private void detach_GIAITRIs(GIAITRI entity)
		{
			this.SendPropertyChanging();
			entity.HOTEL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _HoTen;
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private string _Email;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private EntitySet<DONDATHANG> _DONDATHANGs;
		
		private EntitySet<TINTUC> _TINTUCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._DONDATHANGs = new EntitySet<DONDATHANG>(new Action<DONDATHANG>(this.attach_DONDATHANGs), new Action<DONDATHANG>(this.detach_DONDATHANGs));
			this._TINTUCs = new EntitySet<TINTUC>(new Action<TINTUC>(this.attach_TINTUCs), new Action<TINTUC>(this.detach_TINTUCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(15)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(10)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONDATHANG", Storage="_DONDATHANGs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<DONDATHANG> DONDATHANGs
		{
			get
			{
				return this._DONDATHANGs;
			}
			set
			{
				this._DONDATHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_TINTUC", Storage="_TINTUCs", ThisKey="MaKH", OtherKey="Ma_KH")]
		public EntitySet<TINTUC> TINTUCs
		{
			get
			{
				return this._TINTUCs;
			}
			set
			{
				this._TINTUCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONDATHANGs(DONDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DONDATHANGs(DONDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_TINTUCs(TINTUC entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_TINTUCs(TINTUC entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIENKET")]
	public partial class LIENKET : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ma_LK;
		
		private string _Ten_LK;
		
		private string _DienThoai;
		
		private string _Anh_LK;
		
		private string _Email;
		
		private string _DiaChi;
		
		private EntitySet<TOUR> _TOURs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMa_LKChanging(int value);
    partial void OnMa_LKChanged();
    partial void OnTen_LKChanging(string value);
    partial void OnTen_LKChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnAnh_LKChanging(string value);
    partial void OnAnh_LKChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public LIENKET()
		{
			this._TOURs = new EntitySet<TOUR>(new Action<TOUR>(this.attach_TOURs), new Action<TOUR>(this.detach_TOURs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_LK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ma_LK
		{
			get
			{
				return this._Ma_LK;
			}
			set
			{
				if ((this._Ma_LK != value))
				{
					this.OnMa_LKChanging(value);
					this.SendPropertyChanging();
					this._Ma_LK = value;
					this.SendPropertyChanged("Ma_LK");
					this.OnMa_LKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_LK", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Ten_LK
		{
			get
			{
				return this._Ten_LK;
			}
			set
			{
				if ((this._Ten_LK != value))
				{
					this.OnTen_LKChanging(value);
					this.SendPropertyChanging();
					this._Ten_LK = value;
					this.SendPropertyChanged("Ten_LK");
					this.OnTen_LKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(15)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anh_LK", DbType="VarChar(45)")]
		public string Anh_LK
		{
			get
			{
				return this._Anh_LK;
			}
			set
			{
				if ((this._Anh_LK != value))
				{
					this.OnAnh_LKChanging(value);
					this.SendPropertyChanging();
					this._Anh_LK = value;
					this.SendPropertyChanged("Anh_LK");
					this.OnAnh_LKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LIENKET_TOUR", Storage="_TOURs", ThisKey="Ma_LK", OtherKey="Ma_LK")]
		public EntitySet<TOUR> TOURs
		{
			get
			{
				return this._TOURs;
			}
			set
			{
				this._TOURs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TOURs(TOUR entity)
		{
			this.SendPropertyChanging();
			entity.LIENKET = this;
		}
		
		private void detach_TOURs(TOUR entity)
		{
			this.SendPropertyChanging();
			entity.LIENKET = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TINTUC")]
	public partial class TINTUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ma_TT;
		
		private string _TieuDe_TT;
		
		private string _MoTa_TT;
		
		private string _Anh_TT;
		
		private System.Nullable<int> _Ma_KH;
		
		private System.Nullable<System.DateTime> _NgayDang_TT;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onma_TTChanging(int value);
    partial void Onma_TTChanged();
    partial void OnTieuDe_TTChanging(string value);
    partial void OnTieuDe_TTChanged();
    partial void OnMoTa_TTChanging(string value);
    partial void OnMoTa_TTChanged();
    partial void OnAnh_TTChanging(string value);
    partial void OnAnh_TTChanged();
    partial void OnMa_KHChanging(System.Nullable<int> value);
    partial void OnMa_KHChanged();
    partial void OnNgayDang_TTChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDang_TTChanged();
    #endregion
		
		public TINTUC()
		{
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ma_TT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ma_TT
		{
			get
			{
				return this._ma_TT;
			}
			set
			{
				if ((this._ma_TT != value))
				{
					this.Onma_TTChanging(value);
					this.SendPropertyChanging();
					this._ma_TT = value;
					this.SendPropertyChanged("ma_TT");
					this.Onma_TTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe_TT", DbType="NVarChar(100)")]
		public string TieuDe_TT
		{
			get
			{
				return this._TieuDe_TT;
			}
			set
			{
				if ((this._TieuDe_TT != value))
				{
					this.OnTieuDe_TTChanging(value);
					this.SendPropertyChanging();
					this._TieuDe_TT = value;
					this.SendPropertyChanged("TieuDe_TT");
					this.OnTieuDe_TTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa_TT", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string MoTa_TT
		{
			get
			{
				return this._MoTa_TT;
			}
			set
			{
				if ((this._MoTa_TT != value))
				{
					this.OnMoTa_TTChanging(value);
					this.SendPropertyChanging();
					this._MoTa_TT = value;
					this.SendPropertyChanged("MoTa_TT");
					this.OnMoTa_TTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anh_TT", DbType="VarChar(25)")]
		public string Anh_TT
		{
			get
			{
				return this._Anh_TT;
			}
			set
			{
				if ((this._Anh_TT != value))
				{
					this.OnAnh_TTChanging(value);
					this.SendPropertyChanging();
					this._Anh_TT = value;
					this.SendPropertyChanged("Anh_TT");
					this.OnAnh_TTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_KH", DbType="Int")]
		public System.Nullable<int> Ma_KH
		{
			get
			{
				return this._Ma_KH;
			}
			set
			{
				if ((this._Ma_KH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMa_KHChanging(value);
					this.SendPropertyChanging();
					this._Ma_KH = value;
					this.SendPropertyChanged("Ma_KH");
					this.OnMa_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDang_TT", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayDang_TT
		{
			get
			{
				return this._NgayDang_TT;
			}
			set
			{
				if ((this._NgayDang_TT != value))
				{
					this.OnNgayDang_TTChanging(value);
					this.SendPropertyChanging();
					this._NgayDang_TT = value;
					this.SendPropertyChanged("NgayDang_TT");
					this.OnNgayDang_TTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_TINTUC", Storage="_KHACHHANG", ThisKey="Ma_KH", OtherKey="MaKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.TINTUCs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.TINTUCs.Add(this);
						this._Ma_KH = value.MaKH;
					}
					else
					{
						this._Ma_KH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TOUR")]
	public partial class TOUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ma_TOUR;
		
		private string _Ten_TOUR;
		
		private string _Anh_MAIN;
		
		private string _Anh_TOUR;
		
		private string _Lich_Trinh;
		
		private System.Nullable<decimal> _GiaTien_TOUR;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<System.DateTime> _NgayTOUR;
		
		private System.Nullable<int> _Ma_DD;
		
		private System.Nullable<int> _Ma_LK;
		
		private EntitySet<CHITIETDATHANG> _CHITIETDATHANGs;
		
		private EntityRef<DIADIEM> _DIADIEM;
		
		private EntityRef<LIENKET> _LIENKET;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMa_TOURChanging(int value);
    partial void OnMa_TOURChanged();
    partial void OnTen_TOURChanging(string value);
    partial void OnTen_TOURChanged();
    partial void OnAnh_MAINChanging(string value);
    partial void OnAnh_MAINChanged();
    partial void OnAnh_TOURChanging(string value);
    partial void OnAnh_TOURChanged();
    partial void OnLich_TrinhChanging(string value);
    partial void OnLich_TrinhChanged();
    partial void OnGiaTien_TOURChanging(System.Nullable<decimal> value);
    partial void OnGiaTien_TOURChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnNgayTOURChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTOURChanged();
    partial void OnMa_DDChanging(System.Nullable<int> value);
    partial void OnMa_DDChanged();
    partial void OnMa_LKChanging(System.Nullable<int> value);
    partial void OnMa_LKChanged();
    #endregion
		
		public TOUR()
		{
			this._CHITIETDATHANGs = new EntitySet<CHITIETDATHANG>(new Action<CHITIETDATHANG>(this.attach_CHITIETDATHANGs), new Action<CHITIETDATHANG>(this.detach_CHITIETDATHANGs));
			this._DIADIEM = default(EntityRef<DIADIEM>);
			this._LIENKET = default(EntityRef<LIENKET>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_TOUR", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ma_TOUR
		{
			get
			{
				return this._Ma_TOUR;
			}
			set
			{
				if ((this._Ma_TOUR != value))
				{
					this.OnMa_TOURChanging(value);
					this.SendPropertyChanging();
					this._Ma_TOUR = value;
					this.SendPropertyChanged("Ma_TOUR");
					this.OnMa_TOURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_TOUR", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Ten_TOUR
		{
			get
			{
				return this._Ten_TOUR;
			}
			set
			{
				if ((this._Ten_TOUR != value))
				{
					this.OnTen_TOURChanging(value);
					this.SendPropertyChanging();
					this._Ten_TOUR = value;
					this.SendPropertyChanged("Ten_TOUR");
					this.OnTen_TOURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anh_MAIN", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string Anh_MAIN
		{
			get
			{
				return this._Anh_MAIN;
			}
			set
			{
				if ((this._Anh_MAIN != value))
				{
					this.OnAnh_MAINChanging(value);
					this.SendPropertyChanging();
					this._Anh_MAIN = value;
					this.SendPropertyChanged("Anh_MAIN");
					this.OnAnh_MAINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anh_TOUR", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string Anh_TOUR
		{
			get
			{
				return this._Anh_TOUR;
			}
			set
			{
				if ((this._Anh_TOUR != value))
				{
					this.OnAnh_TOURChanging(value);
					this.SendPropertyChanging();
					this._Anh_TOUR = value;
					this.SendPropertyChanged("Anh_TOUR");
					this.OnAnh_TOURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lich_Trinh", DbType="NVarChar(MAX)")]
		public string Lich_Trinh
		{
			get
			{
				return this._Lich_Trinh;
			}
			set
			{
				if ((this._Lich_Trinh != value))
				{
					this.OnLich_TrinhChanging(value);
					this.SendPropertyChanging();
					this._Lich_Trinh = value;
					this.SendPropertyChanged("Lich_Trinh");
					this.OnLich_TrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTien_TOUR", DbType="Money")]
		public System.Nullable<decimal> GiaTien_TOUR
		{
			get
			{
				return this._GiaTien_TOUR;
			}
			set
			{
				if ((this._GiaTien_TOUR != value))
				{
					this.OnGiaTien_TOURChanging(value);
					this.SendPropertyChanging();
					this._GiaTien_TOUR = value;
					this.SendPropertyChanged("GiaTien_TOUR");
					this.OnGiaTien_TOURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTOUR", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayTOUR
		{
			get
			{
				return this._NgayTOUR;
			}
			set
			{
				if ((this._NgayTOUR != value))
				{
					this.OnNgayTOURChanging(value);
					this.SendPropertyChanging();
					this._NgayTOUR = value;
					this.SendPropertyChanged("NgayTOUR");
					this.OnNgayTOURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_DD", DbType="Int")]
		public System.Nullable<int> Ma_DD
		{
			get
			{
				return this._Ma_DD;
			}
			set
			{
				if ((this._Ma_DD != value))
				{
					if (this._DIADIEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMa_DDChanging(value);
					this.SendPropertyChanging();
					this._Ma_DD = value;
					this.SendPropertyChanged("Ma_DD");
					this.OnMa_DDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_LK", DbType="Int")]
		public System.Nullable<int> Ma_LK
		{
			get
			{
				return this._Ma_LK;
			}
			set
			{
				if ((this._Ma_LK != value))
				{
					if (this._LIENKET.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMa_LKChanging(value);
					this.SendPropertyChanging();
					this._Ma_LK = value;
					this.SendPropertyChanged("Ma_LK");
					this.OnMa_LKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOUR_CHITIETDATHANG", Storage="_CHITIETDATHANGs", ThisKey="Ma_TOUR", OtherKey="MaTour")]
		public EntitySet<CHITIETDATHANG> CHITIETDATHANGs
		{
			get
			{
				return this._CHITIETDATHANGs;
			}
			set
			{
				this._CHITIETDATHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIADIEM_TOUR", Storage="_DIADIEM", ThisKey="Ma_DD", OtherKey="Ma_DD", IsForeignKey=true)]
		public DIADIEM DIADIEM
		{
			get
			{
				return this._DIADIEM.Entity;
			}
			set
			{
				DIADIEM previousValue = this._DIADIEM.Entity;
				if (((previousValue != value) 
							|| (this._DIADIEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIADIEM.Entity = null;
						previousValue.TOURs.Remove(this);
					}
					this._DIADIEM.Entity = value;
					if ((value != null))
					{
						value.TOURs.Add(this);
						this._Ma_DD = value.Ma_DD;
					}
					else
					{
						this._Ma_DD = default(Nullable<int>);
					}
					this.SendPropertyChanged("DIADIEM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LIENKET_TOUR", Storage="_LIENKET", ThisKey="Ma_LK", OtherKey="Ma_LK", IsForeignKey=true)]
		public LIENKET LIENKET
		{
			get
			{
				return this._LIENKET.Entity;
			}
			set
			{
				LIENKET previousValue = this._LIENKET.Entity;
				if (((previousValue != value) 
							|| (this._LIENKET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LIENKET.Entity = null;
						previousValue.TOURs.Remove(this);
					}
					this._LIENKET.Entity = value;
					if ((value != null))
					{
						value.TOURs.Add(this);
						this._Ma_LK = value.Ma_LK;
					}
					else
					{
						this._Ma_LK = default(Nullable<int>);
					}
					this.SendPropertyChanged("LIENKET");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDATHANGs(CHITIETDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = this;
		}
		
		private void detach_CHITIETDATHANGs(CHITIETDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.TOUR = null;
		}
	}
}
#pragma warning restore 1591
